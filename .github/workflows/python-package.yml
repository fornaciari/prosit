# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Python Package

on: push

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        yum install gcc
        pip install --upgrade pip
        pip install setuptools wheel twine
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: set pythonpath
#      run: |
#        echo "PYTHONPATH=/home/runner/work/boostsa/test_boot" >> $GITHUB_ENV
#        echo "PYTHONPATH=/home/runner/work/boostsa/boostsa" >> $GITHUB_ENV
#        echo $GITHUB_ENV
#    - name: Copy package
#      run: |
#        cp /home/runner/work/boostsa/boostsa/boostsa/*.py /home/runner/work/boostsa/boostsa/test_boot/
    - name: Test with pytest
      run: |
        exit
        pip3 uninstall pytest
        pipenv shell
        pip install pytest
        pytest
    - name: Install dependencies
      run: pip install wheel
    - name: Build package
      run: python setup.py sdist bdist_wheel
#    - name: Build and publish
#      env:
#        TWINE_USERNAME: __token__
#        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
#      run: |
#        python setup.py sdist bdist_wheel
#        twine upload dist/*
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}